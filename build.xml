<project name="Project: Red" basedir="/" default="test">
    <property environment="env"/>

    <condition property="mod.build" value="${env.BUILD_NUMBER}" else="0">
        <isset property="env.BUILD_NUMBER"/>
    </condition>

    <property name="src.dir" value="ProjectRed"/>
    <property name="build.dir" value="build"/>
    <property name="scala.dir" value="${build.dir}/scala"/>
    <property name="download.dir" value="DependencyRepo"/>
    <property name="jar.dir" value="dist"/>
    <property name="forge.dir" value="${build.dir}/forge"/>
    <property name="mcp.dir" value="${forge.dir}/mcp"/>
    <property file="build.properties"/>

    <property name="mod.name.base" value="ProjectRedBase-${mc.version}-${mod.version}.${mod.build}.jar"/>
    <property name="mod.name.integration" value="ProjectRedIntegration-${mc.version}-${mod.version}.${mod.build}.jar"/>
    <property name="mod.name.lighting" value="ProjectRedLighting-${mc.version}-${mod.version}.${mod.build}.jar"/>
    <property name="mod.name.mechanical" value="ProjectRedMechanical-BETA-${mc.version}-${mod.version}.${mod.build}.jar"/>
    <property name="mod.name.world" value="ProjectRedWorld-${mc.version}-${mod.version}.${mod.build}.jar"/>
    <property name="mod.name.compat" value="ProjectRedCompat-${mc.version}-${mod.version}.${mod.build}.jar"/>

    <property name="forge.name" value="forge-${mc.version}-${forge.version}-src.zip"/>
    <property name="scala.name" value="scala.zip"/>
    <property name="forgeuni.name" value="forge-${mc.version}-${forge.version}-universal.jar"/>
    <property name="ccl.name" value="CodeChickenLib-dev-${mc.version}-${ccl.version}.jar"/>
    <property name="ccobf.name" value="CCObfuscator-all-${ccobf.version}.jar"/>
    <property name="ccc.name" value="CodeChickenCore-dev%20${ccc.version}.jar"/>
    <property name="fmp.name" value="ForgeMultipart-dev-${mc.version}-${fmp.version}.jar"/>
    <property name="nei.name" value="NotEnoughItems-dev%20${nei.version}.jar"/>
    <property name="tcons.name" value="TConstruct_mc${mc.version}_${tcons.version}.jar"/>
    <property name="texpan.name" value="ThermalExpansion-${texpan.version}.jar"/>
    <property name="cofh.name" value="CoFHCore-${cofh.version}.jar"/>
    <property name="ccraft.name" value="ComputerCraft${ccraft.version}.jar"/>


    <!-- Check downloaded dependencies -->
    <available property="scala-downloaded" file="${download.dir}/${scala.name}"/>
    <available property="ccl-downloaded" file="${download.dir}/${ccl.name}"/>
    <available property="ccobf-downloaded" file="${download.dir}/${ccobf.name}"/>
    <available property="fmp-downloaded" file="${download.dir}/${fmp.name}"/>
    <available property="tcons-downloaded" file="${download.dir}/${tcons.name}"/>
    <available property="texpan-downloaded" file="${download.dir}/${texpan.name}"/>
    <available property="cofh-downloaded" file="${download.dir}/${cofh.name}"/>
    <available property="ccraft-downloaded" file="${download.dir}/${ccraft.name}"/>


    <!-- Check installed dependencies -->
    <property name="build.dependencies.file" value="${build.dir}/dependencies.properties"/>
    <property prefix="build.dependencies" file="${build.dependencies.file}"/>

   
    <condition property="scala-installed">
        <equals arg1="${build.dependencies.scala}" arg2="${scala.version}"/>
    </condition>
    <condition property="ccl-installed">
        <and>
            <equals arg1="${build.dependencies.ccl}" arg2="${ccl.version}"/>
        </and>
    </condition>
    <condition property="ccobf-installed">
        <and>
            <equals arg1="${build.dependencies.ccobf}" arg2="${ccobf.version}"/>
        </and>
    </condition>
    <condition property="fmp-installed">
        <and>
            <equals arg1="${build.dependencies.fmp}" arg2="${fmp.version}"/>
        </and>
    </condition>
    <condition property="tcons-installed">
        <and>
            <equals arg1="${build.dependencies.tcons}" arg2="${tcons.version}"/>
        </and>
    </condition>
    <condition property="texpan-installed">
        <and>
            <equals arg1="${build.dependencies.texpan}" arg2="${texpan.version}"/>
        </and>
    </condition>
    <condition property="cofh-installed">
        <and>
            <equals arg1="${build.dependencies.cofh}" arg2="${cofh.version}"/>
        </and>
    </condition>
    <condition property="ccraft-installed">
        <and>
            <equals arg1="${build.dependencies.ccraft}" arg2="${ccraft.version}"/>
        </and>
    </condition>

    <condition property="runnung-in-ci">
        <isset property="env.TRAVIS"/>
    </condition>


    <!-- Make directories -->
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${download.dir}"/>
    <mkdir dir="${jar.dir}"/>


    <!-- Targets for downloading dependencies -->
    <target name="download-scala" unless="scala-downloaded">
        <get src="http://dl.dropboxusercontent.com/u/46144650/${scala.name}" dest="${download.dir}" usetimestamp="true"/>
    </target>

    <target name="download-ccl" unless="ccl-downloaded">
        <get src="http://files.minecraftforge.net/CodeChickenLib/${ccl.name}" dest="${download.dir}" usetimestamp="true"/>
    </target>

    <target name="download-ccobf" unless="ccobf-downloaded">
        <get src="http://files.minecraftforge.net/CCObfuscator/${ccobf.name}" dest="${download.dir}" usetimestamp="true"/>
    </target>
    <target name="download-fmp" unless="fmp-downloaded">
        <get src="http://files.minecraftforge.net/ForgeMultipart/${fmp.name}" dest="${download.dir}" usetimestamp="true"/>
    </target>

    <target name="download-tcons" unless="tcons-downloaded">
        <get src="http://www.curseforge.com/media/files/${tcons.cf}/${tcons.name}" dest="${download.dir}" usetimestamp="true"/>
    </target>
    <target name="download-texpan" unless="texpan-downloaded">
        <get src="http://www.curseforge.com/media/files/${texpan.cf}/${texpan.name}" dest="${download.dir}" usetimestamp="true"/>
    </target>

    <target name="download-cofh" unless="cofh-downloaded">
        <get src="http://www.curseforge.com/media/files/${cofh.cf}/${cofh.name}" dest="${download.dir}" usetimestamp="true"/>
    </target>

    <target name="download-ccraft" unless="ccraft-downloaded">
        <get src="http://www.curseforge.com/media/files/${ccraft.cf}/${ccraft.name}" dest="${download.dir}/${ccraft.name}" usetimestamp="true"/>
    </target>

    <!-- Targets for installing dependencies -->
    <target name="install-scala" depends="download-scala" unless="scala-installed">
        <echo message="Deleting old Scala"/>
        <delete file="${build.dir}/${build.dependencies.scala.name}"/>

        <echo message="Installing Scala"/>
        <unzip src="${download.dir}/${scala.name}" dest="${scala.dir}"/>

        <echo message="Updating build.dependencies"/>
        <propertyfile file="${build.dependencies.file}">
            <entry key="scala" value="${scala.version}"/>
            <entry key="scala.name" value="${scala.name}"/>
        </propertyfile>
    </target>

    <target name="install-ccl" depends="download-ccl" unless="ccl-installed">
        <echo message="Deleting old CodeChickenLib"/>
        <delete file="${mcp.dir}/lib/${build.dependencies.ccl.name}"/>

        <echo message="Installing CodeChickenLib"/>
        <copy file="${download.dir}/${ccl.name}" todir="${mcp.dir}/lib"/>

        <echo message="Updating build.dependencies"/>
        <propertyfile file="${build.dependencies.file}">
            <entry key="ccl" value="${ccl.version}"/>
            <entry key="ccl.name" value="${ccl.name}"/>
        </propertyfile>
    </target>

    <target name="install-ccobf" depends="download-ccobf" unless="ccobf-installed">
        <echo message="Deleting old CCObfuscator"/>
        <delete file="${mcp.dir}/${build.dependencies.ccobf.name}"/>

        <echo message="Installing CCObfuscator"/>
        <copy file="${download.dir}/${ccobf.name}" todir="${mcp.dir}"/>

        <echo message="Updating build.dependencies"/>
        <propertyfile file="${build.dependencies.file}">
            <entry key="ccobf" value="${ccobf.version}"/>
            <entry key="ccobf.name" value="${ccobf.name}"/>
        </propertyfile>
    </target>

   

    <target name="install-fmp" depends="download-fmp" unless="fmp-installed">
        <echo message="Deleting old ForgeMultipart"/>
        <delete file="${mcp.dir}/lib/${build.dependencies.fmp.name}"/>

        <echo message="Installing ForgeMultipart"/>
        <copy file="${download.dir}/${fmp.name}" todir="${mcp.dir}/lib"/>

        <echo message="Updating build.dependencies"/>
        <propertyfile file="${build.dependencies.file}">
            <entry key="fmp" value="${fmp.version}"/>
            <entry key="fmp.name" value="${fmp.name}"/>
        </propertyfile>
    </target>

   

    <target name="install-tcons" depends="install-ccobf,download-tcons" unless="tcons-installed">
        <echo message="Deleting old Tinkers Construct"/>
        <delete file="${mcp.dir}/lib/${build.dependencies.tcons.name}"/>

        <echo message="Installing Tinkers Construct"/>
        <java jar="${mcp.dir}/${ccobf.name}" fork="true">
            <arg value="-d"/>
            <arg value="-l"/>
            <arg value="${download.dir}/${forgeuni.name},${mcp.dir}/jars/libraries,${mcp.dir}/temp/minecraft_rg.jar"/>
            <arg value="-i"/>
            <arg value="${download.dir}/${tcons.name}"/>
            <arg value="-o"/>
            <arg value="${mcp.dir}/lib"/>
            <arg value="-m"/>
            <arg value="${mcp.dir}/conf"/>
            <arg value="--noclean"/>
            <arg value="-q"/>
        </java>

        <echo message="Updating build.dependencies"/>
        <propertyfile file="${build.dependencies.file}">
            <entry key="tcons" value="${tcons.version}"/>
            <entry key="tcons.name" value="${tcons.name}"/>
        </propertyfile>
    </target>

    <target name="install-texpan" depends="install-ccobf,download-texpan" unless="texpan-installed">
        <echo message="Deleting old Thermal Expansion"/>
        <delete file="${mcp.dir}/lib/${build.dependencies.texpan.name}"/>

        <echo message="Installing Thermal Expansion"/>
        <java jar="${mcp.dir}/${ccobf.name}" fork="true">
            <arg value="-d"/>
            <arg value="-l"/>
            <arg value="${download.dir}/${forgeuni.name},${mcp.dir}/jars/libraries,${mcp.dir}/temp/minecraft_rg.jar"/>
            <arg value="-i"/>
            <arg value="${download.dir}/${texpan.name}"/>
            <arg value="-o"/>
            <arg value="${mcp.dir}/lib"/>
            <arg value="-m"/>
            <arg value="${mcp.dir}/conf"/>
            <arg value="--noclean"/>
            <arg value="-q"/>
        </java>

        <echo message="Updating build.dependencies"/>
        <propertyfile file="${build.dependencies.file}">
            <entry key="texpan" value="${texpan.version}"/>
            <entry key="texpan.name" value="${texpan.name}"/>
        </propertyfile>
    </target>

    <target name="install-cofh" depends="install-ccobf,download-cofh" unless="cofh-installed">
        <echo message="Deleting old CoFHCore"/>
        <delete file="${mcp.dir}/lib/${build.dependencies.cofh.name}"/>

        <echo message="Installing CoFHCore"/>
        <java jar="${mcp.dir}/${ccobf.name}" fork="true">
            <arg value="-d"/>
            <arg value="-l"/>
            <arg value="${download.dir}/${forgeuni.name},${mcp.dir}/jars/libraries,${mcp.dir}/temp/minecraft_rg.jar"/>
            <arg value="-i"/>
            <arg value="${download.dir}/${cofh.name}"/>
            <arg value="-o"/>
            <arg value="${mcp.dir}/lib"/>
            <arg value="-m"/>
            <arg value="${mcp.dir}/conf"/>
            <arg value="--noclean"/>
            <arg value="-q"/>
        </java>

        <echo message="Updating build.dependencies"/>
        <propertyfile file="${build.dependencies.file}">
            <entry key="cofh" value="${cofh.version}"/>
            <entry key="cofh.name" value="${cofh.name}"/>
        </propertyfile>
    </target>

    <target name="install-ccraft" depends="download-ccraft" unless="ccraft-installed">
        <echo message="Deleting old ComputerCraft"/>
        <delete file="${mcp.dir}/lib/${build.dependencies.ccraft.name}"/>

        <echo message="Installing ComputerCraft"/>
        <copy file="${download.dir}/${ccraft.name}" todir="${mcp.dir}/lib"/>

        <echo message="Updating build.dependencies"/>
        <propertyfile file="${build.dependencies.file}">
            <entry key="ccraft" value="${ccraft.version}"/>
            <entry key="ccraft.name" value="${ccraft.name}"/>
        </propertyfile>
    </target>

    <target name="install-dependencies" depends="install-scala,install-ccl,install-ccobf,install-fmp,install-tcons,install-texpan,install-cofh,install-ccraft"/>



    <!-- Targets for building -->




</project>